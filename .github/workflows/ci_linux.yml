name: Unit Linux

on:
  push:
    branches:
      # Push events to branches matching refs/heads/main
      - 'main'
      # Push events to branches matching refs/heads/release*
      - 'release*'
  # Trigger after PR was unlabeled
  pull_request:
    types:
      - unlabeled
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

concurrency:
  group: linux-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  SHARG_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eexuo pipefail {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'lint'
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "clang17"
            compiler: "clang-17"
            build: unit
            build_type: Release

          - name: "gcc13"
            compiler: "gcc-13"
            build: unit
            build_type: Release

          - name: "gcc12"
            compiler: "gcc-12"
            build: unit
            build_type: Release

          - name: "gcc11"
            compiler: "gcc-11"
            build: unit
            build_type: Release

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: sharg
          fetch-depth: 1
          submodules: true

      - name: Setup toolchain
        uses: seqan/actions/setup-toolchain@main
        with:
          compiler: ${{ matrix.compiler }}
          ccache_size: 75M

      - name: Install CMake
        uses: seqan/actions/setup-cmake@main
        with:
          cmake: 3.16.9

      - name: Configure tests
        run: |
          mkdir sharg-build
          cd sharg-build
          cmake ../sharg/test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                                                  -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}" \
                                                  -DSHARG_VERBOSE_TESTS=OFF
          make -j2 gtest_build yaml-cpp

      - name: Build tests
        run: |
          ccache -z
          cd sharg-build
          make -k -j2
          ccache -sv

      - name: Run tests
        run: |
          cd sharg-build
          ctest . -j2 --output-on-failure
