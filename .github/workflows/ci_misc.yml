# SPDX-FileCopyrightText: 2006-2024 Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2024 Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0

name: Misc

on:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - unlabeled
  workflow_dispatch:

concurrency:
  group: misc-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  SHARG_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eeuxo pipefail {0}

jobs:
  build:
    name: ${{ matrix.build }} ${{ matrix.compiler }}
    runs-on: ubuntu-latest
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'lint'
    strategy:
      fail-fast: false
      matrix:
        compiler: ["clang-19", "gcc-14", "gcc-12", "intel"]
        build: ["snippet", "header"]
        include:
          - compiler: "intel"
            cxx_flags: "-fp-model=strict -Wno-overriding-option"
    container:
      image: ghcr.io/seqan/${{ matrix.compiler }}
      volumes:
        - /home/runner:/home/runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Load ccache
        uses: actions/cache@v4
        with:
          path: /home/runner/.ccache
          key: ccache-${{ runner.os }}-${{ github.workflow }}-${{ matrix.build }}-${{ matrix.compiler }}-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ github.workflow }}-${{ matrix.build }}-${{ matrix.compiler }}-${{ github.ref }}
            ccache-${{ runner.os }}-${{ github.workflow }}-${{ matrix.build }}-${{ matrix.compiler }}

      - name: Configure tests
        run: |
          mkdir build && cd build
          cmake ../test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=Release \
                                            -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}"
          make gtest_main yaml-cpp

      - name: Build tests
        working-directory: build
        run: |
          ccache -z
          make -k
          ccache -svvx

      - name: Run tests
        working-directory: build
        run: ctest . -j${{ matrix.build == 'snippet' && '1' || '' }} --output-on-failure --no-tests=error
