# SPDX-FileCopyrightText: 2006-2024 Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2024 Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0

name: Linux

on:
  push:
    branches:
      # Push events to branches matching refs/heads/main
      - 'main'
      # Push events to branches matching refs/heads/release*
      - 'release*'
  # Trigger after PR was unlabeled
  pull_request:
    types:
      - unlabeled
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

concurrency:
  group: misc-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  SHARG_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eexuo pipefail {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'lint'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Snippet clang17"
            compiler: "clang-17"
            build: snippet
            build_type: Release
            cxx_flags: "-stdlib=libc++"
            test_threads: 1

          - name: "Snippet gcc11"
            compiler: "gcc-11"
            build: snippet
            build_type: Release
            test_threads: 1 # snippets create and delete files and some separate tests create/delete the same files

          - name: "Header clang17 cpp23"
            compiler: "clang-17"
            build: header
            build_type: Release
            cxx_flags: "-stdlib=libc++ -std=c++23"
            test_threads: 2

          - name: "Header clang17"
            compiler: "clang-17"
            build: header
            build_type: Release
            cxx_flags: "-stdlib=libc++"
            test_threads: 2

          - name: "Header gcc13 cpp23"
            compiler: "gcc-13"
            build: header
            build_type: Debug
            cxx_flags: "-std=c++23"
            test_threads: 2

          - name: "Header gcc13"
            compiler: "gcc-13"
            build: header
            build_type: Debug
            test_threads: 2

          - name: "Header gcc11"
            compiler: "gcc-11"
            build: header
            build_type: Debug
            test_threads: 2

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: sharg
          fetch-depth: 1
          submodules: true

      - name: Setup toolchain
        uses: seqan/actions/setup-toolchain@main
        with:
          compiler: ${{ matrix.compiler }}
          ccache_size: 75M

      - name: Install CMake
        uses: seqan/actions/setup-cmake@main
        with:
          cmake: 3.16.9

      - name: Configure tests
        run: |
          mkdir sharg-build
          cd sharg-build
          cmake ../sharg/test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                                                  -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}" \
                                                  -DSHARG_VERBOSE_TESTS=OFF \
                                                  ${{ contains(matrix.name, 'Header') && '-DSHARG_NO_TDL=ON' || '' }}

          case "${{ matrix.build }}" in
            snippet) make -j2 gtest_build yaml-cpp;;
            header) make -j2 gtest_build gbenchmark_build;;
          esac

      - name: Build tests
        run: |
          ccache -z
          cd sharg-build
          make -k -j2
          ccache -sv

      - name: Run tests
        run: |
          cd sharg-build
          ctest . -j${{ matrix.test_threads }} --output-on-failure
